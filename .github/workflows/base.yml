on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      latest:
        required: true
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build-and-push:
    strategy:
      fail-fast: true
      matrix:
        arch:
          - label: ubuntu-24.04
            tag: linux-amd64
          - label: ubuntu-24.04-arm
            tag: linux-arm64
    runs-on: ${{ matrix.arch.label }}
    permissions:
      contents: read
      packages: write
    outputs:
      version: ${{ steps.build-and-push.outputs.version }}
      major-minor: ${{ steps.build-and-push.outputs.major-minor }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: build-and-push
        run: |
          # Build image
          nix build \${{ inputs.target }}

          # Load image info
          IMAGE=$(skopeo list-tags docker-archive:result | jq -r ".Tags[0]")
          VERSION=${IMAGE##*:}
          MAJOR_MINOR=$(echo ${VERSION} | awk -F'[.-]' '{print $1 "." $2}')

          # Save VERSION and MAJOR_MINOR
          echo "version=${VERSION}" >> ${GITHUB_OUTPUT}
          echo "major-minor=${MAJOR_MINOR}" >> ${GITHUB_OUTPUT}

          # Tag image
          skopeo copy --retry-times=3 docker-archive:result docker://${IMAGE_NAME}:${VERSION}-\${{ matrix.arch.tag }}
          skopeo copy --retry-times=3 docker-archive:result docker://${IMAGE_NAME}:${MAJOR_MINOR}-\${{ matrix.arch.tag }}
          skopeo copy --retry-times=3 docker-archive:result docker://${IMAGE_NAME}:latest-\${{ matrix.arch.tag }}

  push-manifest:
    runs-on: ubuntu-24.04
    needs:
      - build-and-push
    permissions:
      packages: write
    steps:
      - name: Install manifest-tool
        run: |
          git clone --branch v2.2.0 --depth=1 https://github.com/estesp/manifest-tool
          make -C manifest-tool binary
          sudo mkdir -p /usr/local/bin
          sudo cp "${PWD}/manifest-tool/manifest-tool" /usr/local/bin
          rm -rf manifest-tool

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest images
        run: |
          if \${{ inputs.latest }}; then
            manifest-tool push from-args \
              --platforms linux/amd64,linux/arm64 \
              --template ${IMAGE_NAME}:latest-OS-ARCH \
              --target ${IMAGE_NAME}:latest
          fi

          manifest-tool push from-args \
            --platforms linux/amd64,linux/arm64 \
            --template ${IMAGE_NAME}:\${{ needs.build-and-push.outputs.version }}-OS-ARCH \
            --target ${IMAGE_NAME}:\${{ needs.build-and-push.outputs.version }}

          manifest-tool push from-args \
            --platforms linux/amd64,linux/arm64 \
            --template ${IMAGE_NAME}:\${{ needs.build-and-push.outputs.major-minor }}-OS-ARCH \
            --target ${IMAGE_NAME}:\${{ needs.build-and-push.outputs.major-minor }}
